{"ast":null,"code":"import _slicedToArray from\"/Users/amydeng/Documents/Projects/portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import sanityClient from'../client.js';import smoke from'../smoke.jpeg';import imageUrlBuilder from'@sanity/image-url';import BlockContent from'@sanity/block-content-to-react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var builder=imageUrlBuilder(sanityClient);function urlFor(source){return builder.image(source);}export default function About(){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),author=_useState2[0],setAuthor=_useState2[1];useEffect(function(){sanityClient.fetch(\"*[_type == \\\"author\\\"]{\\n            name,\\n            bio,\\n            \\\"authorImage\\\":image.asset->url\\n        }\").then(function(data){return setAuthor(data[0]);}).catch(console.error);},[]);if(!author)return/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"});return/*#__PURE__*/_jsxs(\"main\",{className:\"relative\",children:[/*#__PURE__*/_jsx(\"img\",{src:smoke,alt:\"background snoke\",className:\"absolute w-full\"}),/*#__PURE__*/_jsx(\"div\",{className:\"p-10 lg:pt-48 container mx-auto relative\",children:/*#__PURE__*/_jsxs(\"section\",{className:\"bg-white bg-opacity-50 rounded-lg shadow-2xl lg:flex p-20\",children:[/*#__PURE__*/_jsx(\"img\",{src:urlFor(author.authorImage).url(),className:\"rounded w-32 h-40 lg:w-64 lg:h-80 mr-8\",alt:author.name}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-lg flex flex-col justify-center\",children:[/*#__PURE__*/_jsxs(\"h1\",{className:\"cursive text-6xl mb-4\",children:[\"Hey there! I'm \",/*#__PURE__*/_jsx(\"span\",{className:\"text-black\",children:author.name}),\".\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"prose lg:prose-xl text-black\",children:/*#__PURE__*/_jsx(BlockContent,{blocks:author.bio,projectId:\"t6ywgvw0\",dataset:\"production\"})})]})]})})]});}","map":{"version":3,"sources":["/Users/amydeng/Documents/Projects/portfolio/src/components/About.js"],"names":["React","useEffect","useState","sanityClient","smoke","imageUrlBuilder","BlockContent","builder","urlFor","source","image","About","author","setAuthor","fetch","then","data","catch","console","error","authorImage","url","name","bio"],"mappings":"kKAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,YAAP,KAAyB,cAAzB,CACA,MAAOC,CAAAA,KAAP,KAAkB,eAAlB,CACA,MAAOC,CAAAA,eAAP,KAA4B,mBAA5B,CACA,MAAOC,CAAAA,YAAP,KAAyB,gCAAzB,C,wFAEA,GAAMC,CAAAA,OAAO,CAAGF,eAAe,CAACF,YAAD,CAA/B,CACA,QAASK,CAAAA,MAAT,CAAgBC,MAAhB,CAAwB,CACtB,MAAOF,CAAAA,OAAO,CAACG,KAAR,CAAcD,MAAd,CAAP,CACD,CAED,cAAe,SAASE,CAAAA,KAAT,EAAiB,CAC9B,cAA4BT,QAAQ,CAAC,IAAD,CAApC,wCAAOU,MAAP,eAAeC,SAAf,eAEAZ,SAAS,CAAC,UAAM,CACdE,YAAY,CACTW,KADH,0HAQGC,IARH,CAQQ,SAACC,IAAD,QAAUH,CAAAA,SAAS,CAACG,IAAI,CAAC,CAAD,CAAL,CAAnB,EARR,EASGC,KATH,CASSC,OAAO,CAACC,KATjB,EAUD,CAXQ,CAWN,EAXM,CAAT,CAaA,GAAI,CAACP,MAAL,CAAa,mBAAO,mCAAP,CAEb,mBACE,cAAM,SAAS,CAAC,UAAhB,wBACE,YAAK,GAAG,CAAER,KAAV,CAAiB,GAAG,CAAC,kBAArB,CAAwC,SAAS,CAAC,iBAAlD,EADF,cAEE,YAAK,SAAS,CAAC,0CAAf,uBACE,iBAAS,SAAS,CAAC,2DAAnB,wBACE,YACE,GAAG,CAAEI,MAAM,CAACI,MAAM,CAACQ,WAAR,CAAN,CAA2BC,GAA3B,EADP,CAEE,SAAS,CAAC,wCAFZ,CAGE,GAAG,CAAET,MAAM,CAACU,IAHd,EADF,cAME,aAAK,SAAS,CAAC,sCAAf,wBACE,YAAI,SAAS,CAAC,uBAAd,0CACiB,aAAM,SAAS,CAAC,YAAhB,UAA8BV,MAAM,CAACU,IAArC,EADjB,OADF,cAIE,YAAK,SAAS,CAAC,8BAAf,uBACE,KAAC,YAAD,EACE,MAAM,CAAEV,MAAM,CAACW,GADjB,CAEE,SAAS,CAAC,UAFZ,CAGE,OAAO,CAAC,YAHV,EADF,EAJF,GANF,GADF,EAFF,GADF,CA0BD","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport sanityClient from '../client.js'\nimport smoke from '../smoke.jpeg'\nimport imageUrlBuilder from '@sanity/image-url'\nimport BlockContent from '@sanity/block-content-to-react'\n\nconst builder = imageUrlBuilder(sanityClient)\nfunction urlFor(source) {\n  return builder.image(source)\n}\n\nexport default function About() {\n  const [author, setAuthor] = useState(null)\n\n  useEffect(() => {\n    sanityClient\n      .fetch(\n        `*[_type == \"author\"]{\n            name,\n            bio,\n            \"authorImage\":image.asset->url\n        }`,\n      )\n      .then((data) => setAuthor(data[0]))\n      .catch(console.error)\n  }, [])\n\n  if (!author) return <div>Loading...</div>\n\n  return (\n    <main className=\"relative\">\n      <img src={smoke} alt=\"background snoke\" className=\"absolute w-full\" />\n      <div className=\"p-10 lg:pt-48 container mx-auto relative\">\n        <section className=\"bg-white bg-opacity-50 rounded-lg shadow-2xl lg:flex p-20\">\n          <img\n            src={urlFor(author.authorImage).url()}\n            className=\"rounded w-32 h-40 lg:w-64 lg:h-80 mr-8\"\n            alt={author.name}\n          />\n          <div className=\"text-lg flex flex-col justify-center\">\n            <h1 className=\"cursive text-6xl mb-4\">\n              Hey there! I'm <span className=\"text-black\">{author.name}</span>.\n            </h1>\n            <div className=\"prose lg:prose-xl text-black\">\n              <BlockContent\n                blocks={author.bio}\n                projectId=\"t6ywgvw0\"\n                dataset=\"production\"\n              />\n            </div>\n          </div>\n        </section>\n      </div>\n    </main>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}